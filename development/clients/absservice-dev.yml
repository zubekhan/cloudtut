message: The Learning Week! But Are You Aware About!
spring:
#RabbitMq Config for Spring Cloud Bus Setup
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    config:
      fail-fast: true
    # To enable spring cloud bus feature
    bus:
      #Workaround for defect in https://github.com/spring-cloud/spring-cloud-bus/issues/124
      id: ${vcap.application.name:${spring.application.name:application}}:${vcap.application.instance_index:${spring.profiles.active:${local.server.port:${server.port:0}}}}:${vcap.application.instance_id:${random.value}}
      enabled: true
      # Optional for spring cloud bus tracing 
      trace:
        enabled: true

#Eureka Server Cluster Ports   
cloud:
  peers:
    default: 8760
    port1: 8761
    port2: 8762
    port3: 8763
    port4: 8764
    
    
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-peer1:${cloud.peers.port1}/eureka/,http://eureka-peer2:${cloud.peers.port2}/eureka/,http://eureka-peer3:${cloud.peers.port3}/eureka/,http://eureka-peer4:${cloud.peers.port4}/eureka/
  instance:  #instance id is the unique id used by eureka server to differentiate an instance among other instances of a service
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}

# For Actuators to enable refresh scope and other
management:
  endpoints:
    web:
      exposure:
        include:
        - '*'

# For logging pupose
logging:
  level:
    ROOT: INFO
    org.springframework.cloud.config: DEBUG

#---
#spring:
#  profiles: abs-one
#eureka:
#  instance:
#    appname: absservice
#  client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-peer1:${cloud.peers.port1}/
#server:
#  port: 8080    
#---
#spring:
#  profiles: abs-two
#eureka:
#  instance:
#    appname: absservice
# client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-peer1:${cloud.peers.port1}
#server:
#  port: 8085      
#---
#spring:
#  profiles: abs-three
#eureka:
#  instance:
#    appname: absservice
#  client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-peer1:${cloud.peers.port1}
#server:
#  port: 8082     
#---
#spring:
#  profiles: abs-four
#eureka:
#  instance:
#    appname: abs-service
#  client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-peer1:${cloud.peers.port1}
#server:
#  port: 8083      
      
#---
#spring:
#  profiles: abs-five
#eureka:
#  instance:
#   appname: abs-service
#  client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-peer1:${cloud.peers.port1}
#server:
#  port: 8084